package version4;
/*
 * 1）如何让程序生成没有重复算式的习题。 ————在产生习题集模块增加判断条件
 * 2）习题中要有加法和减法的算式。（已实现）————做到能够修改习题加法与减法的比例  ————更改生成操作数类
 * 增加题目提示信息的打印输出————printHeader()   
 */
import java.util.Random;

public class V04 {
	
	public static void main(String[] args) {
		int max_Value = 100;    //定义操作数的范围   此处表示100以内的算式
		int equ_Num = 50;     //定义生成算式的数量
		int line_Num = 5;    // 定义每行输出几个算式
		int[][] exercises = new int [equ_Num][3];    //定义用来存放算式的数组   采用二维数组来实现
		printHeader();
		exercises = generateExerciseOfAdditionEquations(equ_Num, max_Value);  //产生习题
		printExercises(exercises,line_Num);  //打印习题
		printAnswersOfExercises(exercises);   //打印答案
	}
	//打印提示信息
	public static void printHeader() {
		System.out.println("----------------------------------------------");
		System.out.println("--程序输出50道100以内的加减法算式习题---");
		System.out.println("--每次运行可得到一套习题和答案---");
		System.out.println("----------------------------------------------");
	}
	//获得操作数 0-max 
	public static int generateAnOperand(int max) {
		Random random = new Random();
		return random.nextInt(max + 1);
	}
	//获得操作数  返回 0 或 1
	public static int generateAnOperater() {
		Random random = new Random();
		//控制加法算式与减法算式的生成比例   例如：更改为加法20%  减法80%
		int operater = 0;
		double flag = random.nextDouble();
		if(flag <= 0.2) {
			operater = 0;
		}else {
			operater = 1;
		}
		return operater;
	}
	//产生一个加法算式   返回一个一维数组 e[] 
	public static int[] generateAnAddEquation(int max_Value) {
		int e[] = new int[] { 0 , 0 , 0 };  // e[0] 左操作数  e[1] 右操作数 e[2] 操作符
		int left_Operand = 0;
		int right_Operand = 0;
		int ov = 0;   //操作数   0表示加法   1表示减法
		 //加入习题集前首先判断算式合法性
		do {
			left_Operand = generateAnOperand(max_Value + 1);
			right_Operand = generateAnOperand(max_Value + 1);
			e[0] = left_Operand;
			e[1] = right_Operand;
			e[2] = ov;
		}while(!validityOfFormula(e));
		return e;
	}
	//产生一个减法算式   返回一个一维数组 e[] 
	public static int[] generateAnSubEquation(int max_Value) {
		int e[] = new int[] { 0 , 0 , 0 };  // e[0] 左操作数  e[1] 右操作数 e[2] 操作符
		int left_Operand = 0;
		int right_Operand = 0;
		int ov = 1;   //操作数   0表示加法   1表示减法
		 //加入习题集前首先判断算式合法性
		do {
			left_Operand = generateAnOperand(max_Value + 1);
			right_Operand = generateAnOperand(max_Value + 1);
//		}while((left_Operand - right_Operand) < 0);
			e[0] = left_Operand;
			e[1] = right_Operand;
			e[2] = ov;
		}while(!validityOfFormula(e));
		return e;
	}
	//判断当前算式是否已经存在在习题集当中了
	public static boolean isExist(int[] e,int[][] exercises,int n) {
		boolean flag = false;
		for(int i = 0; i < n; i++) {
			if(e[0] == exercises[i][0] && e[1] == exercises[i][1] && e[2] == exercises[i][2]
					|| (e[0] == exercises[i][1] && e[1] == exercises[i][0] && e[2] == exercises[i][2])) {
				flag = true;
				return flag;
			}
		}
		return flag;
	}
	//判断算式合法性————是否可以加入到习题集当中
	public static boolean validityOfFormula(int[] e) {
		boolean flag = false;
		if(e[2] == 0) {
			if((e[0] + e[1]) <= 100) {
				flag = true;
				return flag;
			}
		}
		if(e[2] == 1) {
			if((e[0] - e[1]) >= 0) {
				flag = true;
				return flag;
			}
		}
		return flag;
	}
	//产生习题集  传入参数有：  生成题目数量num  操作数的范围max_value
	public static int[][] generateExerciseOfAdditionEquations(int num,int max_Value){
		int[] e = new int[3];  //存放一个算式
		int ov = 0;  //定义一个操作符
		int[][] exercises = new int[num][];
		//循环产生数目为num的加减法算式 
		for(int i = 0 ; i < num ; i++) {
			ov = generateAnOperater();
			if(ov == 0) {
				e = generateAnAddEquation(max_Value);
			}else {
				e = generateAnSubEquation(max_Value);
			}
			if(!isExist(e,exercises,i)) {
				exercises[i] = e;
			}
		}
		return exercises;
	}
	//打印习题
	public static void printExercises(int[][] exercises,int line_Num) {
		for(int i = 0; i < exercises.length; i++) {
			if(exercises[i][2] == 0) {
			 	System.out.print((i+1) + "：" + exercises[i][0] + " + " + exercises[i][1] + "= \t");
			}else {
			 	System.out.print((i+1) + "：" + exercises[i][0] + " - " + exercises[i][1] + "= \t");
			}
			if((i+1) % line_Num == 0) {
				System.out.println();
			}
		}
	}
	//打印习题答案
	public static void printAnswersOfExercises(int[][] exercises) {
		System.out.println("--------习题答案如下----------------");
		for(int i = 0; i < exercises.length; i++) {
			if(exercises[i][2] == 0) {
			 	System.out.println("第" + (i+1) + "题答案：" + (exercises[i][0] +  exercises[i][1]));
			}else {
			 	System.out.println("第" + (i+1) + "题答案：" + (exercises[i][0] - exercises[i][1]));
			}
		}
	}
}
